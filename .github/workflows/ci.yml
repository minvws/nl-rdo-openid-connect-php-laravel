name: Continuous Integration

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    run-tests:
        runs-on: ubuntu-20.04

        strategy:
            fail-fast: false
            matrix:
                php: [ 8.0, 8.1, 8.2 ]
                laravel: [ 8.*, 9.*, 10.* ]
                dependency-version: [ prefer-stable ]
                include:
                  - laravel: 8.*
                    testbench: 6.*
                  - laravel: 9.*
                    testbench: 7.*
                  - laravel: 10.*
                    testbench: 8.*
                exclude:
                  - laravel: 10.*
                    php: 8.0

        name: PHP ${{ matrix.php }} - L${{ matrix.laravel }}
        env:
            PHP: ${{ matrix.os }}
            PHP_VERSION: ${{ matrix.php }}
            COMPOSER_MEMORY_LIMIT: -1
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ~/.composer/cache/files
                  key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
                  restore-keys: |
                      dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-
                      dependencies-laravel-${{ matrix.laravel }}-php-
                      dependencies-laravel-

            - name: Install PHP
              uses: shivammathur/setup-php@master
              with:
                  php-version: ${{ matrix.php }}
                  extensions: xdebug, zip

            - name: Install dependencies
              run: |
                  composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
                  composer update --${{ matrix.stability }} --prefer-dist --no-interaction

            - name: Execute tests (Unit and Feature)
              run: vendor/bin/phpunit

            - name: Static analysis with PHPStan
              run: vendor/bin/phpstan analyse

            - name: Static analysis with Psalm
              run: vendor/bin/psalm

            - name: Coding style PSR12 Check
              run: vendor/bin/phpcs
